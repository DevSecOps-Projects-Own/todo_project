# name: Django CI

# on:
#   push:
#     branches: [ main ]

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:14
#         env:
#           POSTGRES_DB: django
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd="pg_isready -U postgres"
#           --health-interval=10s
#           --health-timeout=5s
#           --health-retries=5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.11'

#       - name: Install Docker Compose
#         run: sudo apt-get update && sudo apt-get install -y docker-compose

#       - name: Build Docker containers
#         run: docker-compose build

#       - name: Wait for PostgreSQL to be ready
#         run: |
#           echo "Waiting for PostgreSQL to become available..."
#           for i in {1..30}; do
#             docker-compose run --rm db pg_isready -U postgres && exit 0
#             echo "Waiting..."
#             sleep 2
#           done
#           echo "PostgreSQL did not become ready in time."
#           exit 1


#       - name: Run migrations
#         run: docker-compose run web python manage.py migrate

#       - name: Run tests
#         run: docker-compose run web python manage.py test

#       - name: Run flake8 linting
#         run: docker-compose run web flake8 . --exclude=migrations,__pycache__,.env --ignore=E501
